---
# The user may specify a user-global config file as
# ~/.bunsen/vagrant-config.yml. The user may also specify a local config,
# vagrant-config.yml, file in the bunsen working directory.
#
# The three configuration files (lowest-to-highest precedence):
#   - vagrant-bunsen.yml (global config)
#   - ~/.bunsen/vagrant-config.yml
#   - vagrant-config.yml
# will be merged to create the final vagrant configuration to be deployed.
#
# See example-user-vagrant-config.yml for details on what can be controlled
# via the user config files.

# Machines will be named by their respectively specified names and count
# values.  For example, having a name of "foo" and a count of 2 the machines
# created will be named: foo-1 and foo-2.

# Machines have a distribution key (distro:) specifying the operating system
# and release version with which they are to be provisioned.  The key's value
# is specified as a lowercase distribution family (one of: centos, fedora or
# rhel) with the version (major and minor in the case of centos and rhel)
# appended; e.g., centos83, fedora32, rhel84.
#
# The expected source location (and any associated required parameters) for
# a distribution is provided via the configuration processing code (see
# ./bin/ruby/bunsenConfig.rb).  This allows an individual to simply specify
# the distribution they wish to use in either their user-level (~/.bunsen)
# or local (bunsen working directory) configuration file.  Specifying an
# unknown distribution will result in provisioning failure.
#
# N.B. The configuration processing correctly handles centos/rhel 7.5 (the
#      earliest supported release) through 74.x.  When/if the centos/rhel
#      release reaches 75.x the configuration processing will require
#      modification.

# The available distributions can be found at
# http://vdo-image-store.permabit.lab.eng.bos.redhat.com/repository/vagrant_boxes/
# The available distributions are those without "latest" or "nightly" in
# the directory names.


# Environment establishes the mounts and machines (infrastructure, resources
# and farms) to be created.
environment:
  # A possibly-empty prefix to attach to all hostnames, to simplify development
  # with/of bunsen so VM configurations in two directories can more easily be
  # given distinct sets of names.
  name_prefix:

  # An optional domain name for the deployed hosts.
  domain:

  # User account to create on the vagrant machines.  By default an account for
  # the executing user is created.  This account is in addition to that.
  user_account:

  # Use your old /permabit/user/<name> directory as your login.
  use_permabit_account: false

  # This mounts attribute is for defining common mounts which may be included
  # across multiple machines.  Specify a label (&<name>), source (on the host
  # machine) and mount (on the guest machine) and place a label reference
  # (*<name>) in the per-distro mounts specification.
  #
  # Per-distro mounts may be specified in the individual distro mounts
  # attribute.  These use source and mount (with the same meaning as above).
  #
  # The mount value must be a full path.
  #
  # Simply uncommenting the three lines below will, under the assumption you
  # are operating in <workspace>/main/src/tools/bunsen, make your workspace
  # available as /workspace in the vagrant machines.  You may modify these
  # values as desired.
  #
  # Specified mounts are accessed using sshfs.
  mounts:
    #- &workspace
    #  source: "../../../.."
    #  mount: "/workspace"

# Each individual host is part of group which has a role. There are currently
# 3 roles, infrastructure, resources, and farms, described below. For each
# role, these are the default configuration parameters for all machine groups
# in that role.
#
# All sizes (memory and disk) are in gigabytes.
# Disks are in addition to the machine image disk.
#
role_defaults:
  # Infrastructure translates to NFS and RSVP server.
  # There must be one and only one of these.
  infrastructure:
    count: 1
    memory: 1
    cpus: 1

  # Resources are machines for building or other generalized processing.
  resources:
    count: 0
    memory: 1
    cpus: 2

  farms:
    count: 0
    memory: 2
    cpus: 2
    disks:
      - size: 150

# These are the actual machine groups. Each group must have a distinct name,
# a distro and a role. Other parameters must be specified only to override the
# defaults.
#
# The count parameter specifies the number of VMs to create in the group.
#
# With the exception of the infrastructure role, which must have
# precisely one host, machines in a group will have a number appended to
# their name to differentiate the individual machines in the group.
#
machines:
  server:
    distro: fedora30
    role: infrastructure

  builder-rhel81:
    distro: rhel81
    role: resources
    count: 1

  farm-rhel81:
    distro: rhel81
    role: farms
    count: 4
